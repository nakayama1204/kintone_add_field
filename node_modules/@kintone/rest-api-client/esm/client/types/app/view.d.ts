declare type ViewType = "LIST" | "CALENDAR" | "CUSTOM";
declare type ViewBaseForResponse = {
    index: string;
    builtinType?: "ASSIGNEE";
    id: string;
    name: string;
    filterCond: string;
    sort: string;
};
declare type ViewBaseForParameter = {
    index: string | number;
    name?: string;
    filterCond?: string;
    sort?: string;
};
declare type AdditionalPropertyForResponse = {
    LIST: {
        fields: string[];
    };
    CALENDAR: {
        date: string;
        title: string;
    };
    CUSTOM: {
        html: string;
        pager: boolean;
        device: "DESKTOP" | "ANY";
    };
};
declare type AdditionalPropertyForParameter = {
    LIST: {
        fields?: string[];
    };
    CALENDAR: {
        date?: string;
        title?: string;
    };
    CUSTOM: {
        html?: string;
        pager?: boolean;
        device?: "DESKTOP" | "ANY";
    };
};
export declare type ViewForResponse<U extends ViewType = ViewType> = U extends ViewType ? ViewBaseForResponse & {
    type: U;
} & AdditionalPropertyForResponse[U] : never;
export declare type ViewForParameter<U extends ViewType = ViewType> = U extends ViewType ? ViewBaseForParameter & {
    type: U;
} & AdditionalPropertyForParameter[U] : never;
export {};
