import type { Entity } from "../entity";
export declare type GeneralNotificationForParameter = {
    entity: Entity | {
        type: "FIELD_ENTITY";
        code: string;
    };
    includeSubs?: boolean;
    recordAdded?: boolean;
    recordEdited?: boolean;
    commentAdded?: boolean;
    statusChanged?: boolean;
    fileImported?: boolean;
};
export declare type GeneralNotificationForResponse = {
    entity: Entity | {
        type: "FIELD_ENTITY";
        code: string;
    };
    includeSubs: boolean;
    recordAdded: boolean;
    recordEdited: boolean;
    commentAdded: boolean;
    statusChanged: boolean;
    fileImported: boolean;
};
export declare type PerRecordNotificationForParameter = {
    filterCond: string;
    title?: string;
    targets: Array<{
        entity: Entity | {
            type: "FIELD_ENTITY";
            code: string;
        };
        includeSubs?: boolean;
    }>;
};
export declare type PerRecordNotificationForResponse = {
    filterCond: string;
    title: string;
    targets: Array<{
        entity: Entity | {
            type: "FIELD_ENTITY";
            code: string;
        };
        includeSubs: boolean;
    }>;
    revision: string;
};
export declare type ReminderNotificationForParameter = {
    timing: {
        code: string;
        daysLater: string | number;
        hoursLater: string | number;
    } | {
        code: string;
        daysLater: string | number;
        time: string;
    };
    filterCond?: string;
    title?: string;
    targets: Array<{
        entity: Entity | {
            type: "FIELD_ENTITY";
            code: string;
        };
        includeSubs?: boolean | string;
    }>;
};
export declare type ReminderNotificationForResponse = {
    timing: {
        code: string;
        daysLater: string;
        hoursLater: string;
    } | {
        code: string;
        daysLater: string;
        time: string;
    };
    filterCond: string;
    title: string;
    targets: [
        {
            entity: Entity | {
                type: "FIELD_ENTITY";
                code: string;
            };
            includeSubs: boolean;
        }
    ];
};
