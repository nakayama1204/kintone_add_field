import type { Entity } from "../entity";
declare type AssigneeEntityForResponse = {
    entity: Entity | {
        type: "FIELD_ENTITY" | "CUSTOM_FIELD";
        code: string;
    } | {
        type: "CREATOR";
        code: null;
    };
    includeSubs: boolean;
};
declare type AssigneeEntityForParameter = {
    entity: Entity | {
        type: "FIELD_ENTITY" | "CUSTOM_FIELD";
        code: string;
    } | {
        type: "CREATOR";
    };
    includeSubs?: boolean;
};
declare type AssigneeType = "ONE" | "ALL" | "ANY";
export declare type StateForResponse = {
    index: string;
    name: string;
    assignee: {
        type: AssigneeType;
        entities: AssigneeEntityForResponse[];
    };
};
export declare type StateForParameter = {
    index: string | number;
    name?: string;
    assignee?: {
        type: AssigneeType;
        entities: AssigneeEntityForParameter[];
    };
};
export declare type ActionForResponse = {
    name: string;
    from: string;
    to: string;
    filterCond: string;
};
export declare type ActionForParameter = {
    name: string;
    from: string;
    to: string;
    filterCond?: string;
};
export {};
