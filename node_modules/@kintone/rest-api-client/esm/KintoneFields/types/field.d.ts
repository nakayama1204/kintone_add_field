declare type FieldWith<T extends string, V> = {
    type: T;
    value: V;
};
declare type Entity = {
    code: string;
    name: string;
};
declare type FileInformation = {
    contentType: string;
    fileKey: string;
    name: string;
    size: string;
};
export declare type ID = FieldWith<"__ID__", string>;
export declare type Revision = FieldWith<"__REVISION__", string>;
export declare type RecordNumber = FieldWith<"RECORD_NUMBER", string>;
export declare type Creator = FieldWith<"CREATOR", Entity>;
export declare type CreatedTime = FieldWith<"CREATED_TIME", string>;
export declare type Modifier = FieldWith<"MODIFIER", Entity>;
export declare type UpdatedTime = FieldWith<"UPDATED_TIME", string>;
export declare type SingleLineText = FieldWith<"SINGLE_LINE_TEXT", string>;
export declare type Number = FieldWith<"NUMBER", string>;
export declare type Calc = FieldWith<"CALC", string>;
export declare type MultiLineText = FieldWith<"MULTI_LINE_TEXT", string>;
export declare type RichText = FieldWith<"RICH_TEXT", string>;
export declare type Link = FieldWith<"LINK", string>;
export declare type CheckBox = FieldWith<"CHECK_BOX", string[]>;
export declare type RadioButton = FieldWith<"RADIO_BUTTON", string>;
export declare type Dropdown = FieldWith<"DROP_DOWN", string | null>;
export declare type MultiSelect = FieldWith<"MULTI_SELECT", string[]>;
export declare type File = FieldWith<"FILE", FileInformation[]>;
export declare type Date = FieldWith<"DATE", string | null>;
export declare type Time = FieldWith<"TIME", string | null>;
export declare type DateTime = FieldWith<"DATETIME", string>;
export declare type UserSelect = FieldWith<"USER_SELECT", Entity[]>;
export declare type OrganizationSelect = FieldWith<"ORGANIZATION_SELECT", Entity[]>;
export declare type GroupSelect = FieldWith<"GROUP_SELECT", Entity[]>;
export declare type Category = FieldWith<"CATEGORY", string[]>;
export declare type Status = FieldWith<"STATUS", string>;
export declare type StatusAssignee = FieldWith<"STATUS_ASSIGNEE", Entity[]>;
export declare type InSubtable = SingleLineText | Number | Calc | MultiLineText | RichText | Link | CheckBox | RadioButton | Dropdown | MultiSelect | File | Date | Time | DateTime | UserSelect | OrganizationSelect | GroupSelect;
declare type SubtableRow<T extends {
    [fieldCode: string]: InSubtable;
}> = {
    id: string;
    value: T;
};
export declare type Subtable<T extends {
    [fieldCode: string]: InSubtable;
}> = FieldWith<"SUBTABLE", Array<SubtableRow<T>>>;
export declare type OneOf = ID | Revision | RecordNumber | Creator | CreatedTime | Modifier | UpdatedTime | SingleLineText | Number | Calc | MultiLineText | RichText | Link | CheckBox | RadioButton | Dropdown | MultiSelect | File | Date | Time | DateTime | UserSelect | OrganizationSelect | GroupSelect | Category | Status | StatusAssignee | Subtable<{
    [fieldCode: string]: InSubtable;
}>;
export {};
